services:
#  This is main container where all the work happens 
  apache:
    container_name: project_be_apache 
    build: 
      context: ./
      dockerfile: ./backend/apache/Dockerfile
    restart: on-failure 
    ports:
      - "8080:80"
    volumes:
      - ./backend/laravel:/var/www/html
      - ./backend/apache/config/apache2.conf:/etc/apache2/apache2.conf
      - ./backend/apache/config/ports.conf:/etc/apache2/ports.conf
      - ./backend/apache/config/envvars:/etc/apache2/envvars
      - ./backend/apache/config/conf-available:/etc/apache2/conf-available
      - ./backend/apache/config/mods-available:/etc/apache2/mods-available
      - ./backend/apache/config/sites-available:/etc/apache2/sites-available
    env_file:
      - .env
    depends_on:
      - mysql
    networks:
      - project_network

  mysql:
    image: mysql:8.0
    container_name: project_mysql
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}  
      MYSQL_DATABASE: ${MYSQL_DATABASE}         
      MYSQL_USER: ${MYSQL_USER}                  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD} 
    volumes:
      - project_SQL_database:/var/lib/mysql 
    ports:
      - "3306:3306"
    networks:
      - project_network

  laravel:
    image: php:8.3-cli
    container_name: project_be_laravel
    build:
      context: ./
      dockerfile: ./backend/laravel/Dockerfile
    restart: on-failure
    volumes:
       - ./backend/laravel:/var/www/html
    depends_on:
      - mysql
    networks:
      - project_network
    env_file:
      - .env

  # frontend:
  #   container_name: project_fe
  #   build:
  #     context: ./
  #     dockerfile: ./frontend/Dockerfile
  #   restart: on-failure
  #   environment:
  #     - PORT=4000
  #     - HOST=0.0.0.0
  #   volumes:
  #      - ./frontend:/var/www/html
  #   networks:
  #     - project_network
  #   ports:
  #     - "4000:4000"

volumes:
  project_SQL_database:

networks:
  project_network:
